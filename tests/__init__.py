import unittest
from pyeh import ExtendedHuckel
import numpy as np


class Testehmethod(unittest.TestCase):

    def setUp(self):
        coordinates = [[0.00000, 0.00000, 0.00000],
                       [0.00000, 0.00000, 1.10000],
                       [1.03709, 0.00000, -0.36667],
                       [-0.51855, 0.89815, -0.36667],
                       [-0.51855, -0.89815, -0.36667]]
        symbols = ['Ti', 'H', 'H', 'H', 'H']

        self.tih4 = ExtendedHuckel(coordinates=coordinates, symbols=symbols)

    def test_energies(self):
        tih4_energies = [-0.58512015, -0.46521299, -0.46521295, -0.46521274, -0.26374979,
                         -0.26374979, -0.22441406, -0.22441400, -0.22441380, 1.71448118,
                         2.47970697, 2.47973523, 2.47975843]
        np.testing.assert_allclose(self.tih4.get_mo_energies(), tih4_energies, rtol=1e-7)

    def test_eigenvectors(self):
        tih4_eigenvectors = [[1.38526998e-01, -1.21416683e-08, 8.67512344e-18,
                              -1.46415218e-08, 2.08987363e-07, -4.24969503e-08,
                              1.59587704e-17, 2.26795904e-07, 0.00000000e+00,
                              3.57373242e-01, 3.57373155e-01, 3.57372454e-01,
                              3.57372454e-01],
                             [-9.08959228e-18, 2.31209727e-11, 2.02205402e-01,
                              1.35050402e-10, 2.07774276e-10, -2.05368894e-11,
                              -1.79608954e-01, 2.90432655e-11, -2.54005572e-01,
                              4.27481614e-10, -7.34949526e-11, 5.22601194e-01,
                              -5.22601195e-01],
                             [-4.27973696e-08, 1.70723583e-01, -9.18892604e-11,
                              1.08354569e-01, 1.66702614e-01, -1.51645652e-01,
                              8.16205750e-11, 2.14456687e-01, 1.15428958e-10,
                              3.42980329e-01, 3.95166512e-01, -3.69074454e-01,
                              -3.69074453e-01],
                             [1.61015411e-08, -1.08354697e-01, -1.01633964e-10,
                              1.70723986e-01, 2.62656146e-01, 9.62465908e-02,
                              9.02766120e-11, -1.36112039e-01, 1.27670288e-10,
                              5.40399641e-01, -5.03498613e-01, -1.84506822e-02,
                              -1.84506816e-02],
                             [6.37087269e-10, -1.46998541e-15, -1.55598606e-15,
                              5.88171000e-16, -9.51962397e-10, -1.01689284e-03,
                              -8.16496112e-01, -7.19059969e-04, 5.77349589e-01,
                              1.83491993e-11, 1.83481575e-11, 1.83493003e-11,
                              1.83485667e-11],
                             [5.11535909e-07, -2.22194487e-13, -5.65278892e-16,
                              -2.36075147e-13, -7.64357183e-07, -8.16492864e-01,
                              1.01689688e-03, -5.77354183e-01, -7.19054248e-04,
                              1.47327337e-08, 1.47327580e-08, 1.47328347e-08,
                              1.47328348e-08],
                             [1.87832156e-06, 1.47900549e-01, -4.45343081e-10,
                              5.03591357e-01, -8.02594126e-01, 1.36090690e-01,
                              -4.09778080e-10, -1.92458057e-01, -5.79515758e-10,
                              1.44312621e-01, -8.14504032e-03, -6.80840550e-02,
                              -6.80840548e-02],
                             [9.55852990e-07, 5.03591682e-01, 3.34935608e-10,
                              -1.47900782e-01, 2.35713154e-01, 4.63381170e-01,
                              3.08186004e-10, -6.55312821e-01, 4.35845660e-10,
                              -4.23833792e-02, 1.50187121e-01, -5.39020216e-02,
                              -5.39020218e-02],
                             [9.91986482e-16, -1.95868817e-10, 5.24862447e-01,
                              5.21676119e-10, -8.31414995e-10, -1.80230554e-10,
                              4.82947813e-01, 2.54880878e-10, 6.82991759e-01,
                              1.49494773e-10, -1.02751276e-10, 1.22807737e-01,
                              -1.22807737e-01],
                             [-2.25040405e+00, 8.25374843e-06, -2.10553440e-16,
                              7.47117036e-06, 6.77770278e-07, -1.74789692e-06,
                              6.77223404e-17, 4.38270141e-07, 1.11022302e-16,
                              8.49880714e-01, 8.49881506e-01, 8.49889053e-01,
                              8.49889053e-01],
                             [3.22266439e-16, 3.78673559e-12, -1.87149813e+00,
                              5.82885682e-12, 3.57846750e-12, -1.34219514e-12,
                              6.63338466e-01, 1.89814776e-12, 9.38102822e-01,
                              -6.22997813e-12, -1.73924120e-12, 1.63318162e+00,
                              -1.63318162e+00],
                             [-1.30620355e-05, -1.68559002e+00, -5.94363773e-12,
                              -8.13222364e-01, -4.99247228e-01, 5.97446717e-01,
                              2.10675504e-12, -8.44907015e-01, 2.97922798e-12,
                              8.69165274e-01, 1.40878452e+00, -1.13896751e+00,
                              -1.13896751e+00],
                             [3.44992381e-06, -8.13224420e-01, 3.60432517e-12,
                              1.68559588e+00, 1.03480257e+00, 2.88243269e-01,
                              -1.27717366e-12, -4.07634291e-01, -1.80674226e-12,
                              -1.80154133e+00, 1.41996967e+00, 1.90784023e-01,
                              1.90784023e-01]]
        # print(repr(self.tih4.get_eigenvectors()))
        np.testing.assert_allclose(self.tih4.get_eigenvectors(), tih4_eigenvectors, rtol=1e-7)

    def test_multiplicity(self):
        self.assertEqual(self.tih4.get_multiplicity(), 1)
